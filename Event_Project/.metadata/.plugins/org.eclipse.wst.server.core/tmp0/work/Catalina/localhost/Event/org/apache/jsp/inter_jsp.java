/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.5
 * Generated at: 2018-09-04 22:20:08 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class inter_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<title>EVENT</title>\r\n");
      out.write("</head>\r\n");
      out.write("<style>\r\n");
      out.write("@font-face{\r\n");
      out.write("\tfont-family: 'Calligraphy Personal Use'; src:url('font/Calligraphy Personal Use.ttf');\r\n");
      out.write("}\r\n");
      out.write("@font-face{font-family:'NANUMSQUAREROUNDL'; src:url('font/NANUMSQUAREROUNDL.TTF')}\r\n");
      out.write("@font-face{font-family:'NANUMSQUAREROUNDB'; src:url('font/NANUMSQUAREROUNDB.TTF')}\r\n");
      out.write("body{\r\n");
      out.write("\tmargin:0px;\r\n");
      out.write("\tpadding:0px;\r\n");
      out.write("\tfont-family:'NANUMSQUAREROUNDB';\r\n");
      out.write("\tbackground-color: #151515;\r\n");
      out.write("\tcolor: white;\r\n");
      out.write("}\r\n");
      out.write("button{\r\n");
      out.write("  background:red;\r\n");
      out.write("  color:#fff;\r\n");
      out.write("  border:none;\r\n");
      out.write("  position:relative;\r\n");
      out.write("  margin-right: 3%;\r\n");
      out.write("  margin-bottom: 3%;\r\n");
      out.write("  height:60px;\r\n");
      out.write("  font-size:1em;\r\n");
      out.write("  padding:0 2em;\r\n");
      out.write("  cursor:pointer;\r\n");
      out.write("  transition:800ms ease all;\r\n");
      out.write("  outline:none;\r\n");
      out.write("}\r\n");
      out.write("button:hover{\r\n");
      out.write("  background:#151515;\r\n");
      out.write("  color:white;\r\n");
      out.write("}\r\n");
      out.write("button:before,button:after{\r\n");
      out.write("  content:'';\r\n");
      out.write("  position:absolute;\r\n");
      out.write("  top:0;\r\n");
      out.write("  right:0;\r\n");
      out.write("  height:2px;\r\n");
      out.write("  width:0;\r\n");
      out.write("  background: red;\r\n");
      out.write("  transition:400ms ease all;\r\n");
      out.write("}\r\n");
      out.write("button:after{\r\n");
      out.write("  right:inherit;\r\n");
      out.write("  top:inherit;\r\n");
      out.write("  left:0;\r\n");
      out.write("  bottom:0;\r\n");
      out.write("}\r\n");
      out.write("button:hover:before,button:hover:after{\r\n");
      out.write("  width:100%;\r\n");
      out.write("  transition:800ms ease all;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("<body>\r\n");
      out.write("<center><div style = \"font-family: Calligraphy Personal Use; font-size: 90pt; margin-top:5%\">Interpretation</div></center>\r\n");
      out.write("<center>\r\n");
      out.write("\t\t<br><br>\r\n");
      out.write("\t\t<hr color=\"red\" style = \"width: 50%\">\r\n");
      out.write("\t\t<br>\r\n");
      out.write("\t\t<div style = \"font-size: 20pt;\">첫번째 문제 해석</div>\r\n");
      out.write("\t\t<br>\r\n");
      out.write("\t\t<hr color=\"red\" style = \"width: 50%\">\r\n");
      out.write("\t\t<br>\r\n");
      out.write("\t\t<br>\r\n");
      out.write("\t\t인형 = doll 피해자는 인형과 거울을 들고 있었다.<br><br> 인형을 거울로 비추면 llob 즉, 1106호를 뜻한다. 그러므로 답은 3번 1106호 거울 수집가이다.\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<br><br>\r\n");
      out.write("\t\t<hr color=\"red\" style = \"width: 50%\">\r\n");
      out.write("\t\t<br>\r\n");
      out.write("\t\t<div style = \"font-size: 20pt;\">두번째 문제 해석</div>\r\n");
      out.write("\t\t<br>\r\n");
      out.write("\t\t<hr color=\"red\" style = \"width: 50%\">\r\n");
      out.write("\t\t<br>\r\n");
      out.write("\t\t<br>\r\n");
      out.write("\t\tP&A를 P AND A라고 생각한다면 PANDA가 된다. <br><br>그러므로 범인은 판다 사육사인 4번 D이다.\r\n");
      out.write("\r\n");
      out.write("\t\t<br><br>\r\n");
      out.write("\t\t<hr color=\"red\" style = \"width: 50%\">\r\n");
      out.write("\t\t<br>\r\n");
      out.write("\t\t<div style = \"font-size: 20pt;\">세번째 문제 해석</div>\r\n");
      out.write("\t\t<br>\r\n");
      out.write("\t\t<hr color=\"red\" style = \"width: 50%\">\r\n");
      out.write("\t\t<br>\r\n");
      out.write("\t\t<br>\r\n");
      out.write("\t\t만일 '사과', '오렌지', '레몬' 순으로 놓인 상자에서 '사과' 상자를 열었는데 레몬이 있다고 가정하자.<br><br>\r\n");
      out.write("\t\t전제가 상표가 다르게 붙어 있다는 것이니 이를 고려하면 <br><br>1번만 상자를 열어도 모든 상자 속 과일을 맞출 수 있다.<br><br>\r\n");
      out.write("\t\t즉, '사과'에 레몬이 있다면 '오렌지'에는 사과, '레몬'에는 오렌지가 들어 있다는 뜻 <br><br>그러므로 답은 1번, 최소 1번이다.\r\n");
      out.write("\r\n");
      out.write("\t\t<br><br>\r\n");
      out.write("\t\t<hr color=\"red\" style = \"width: 50%\">\r\n");
      out.write("\t\t<br>\r\n");
      out.write("\t\t<div style = \"font-size: 20pt;\">네번째 문제 해석</div>\r\n");
      out.write("\t\t<br>\r\n");
      out.write("\t\t<hr color=\"red\" style = \"width: 50%\">\r\n");
      out.write("\t\t<br>\r\n");
      out.write("\t\t<br>\r\n");
      out.write("\t\t정전이 일어난 시간에는 TV를 볼 수 없었다. <br><br>따라서 TV를 보고 있었다는 2번, 김희철의 알리바이는 성립되지 않는다.<br><br>\r\n");
      out.write("\t\t또한 S자는 8을 그리려다 중간에 연필이 부러진 것이라 추측할 수 있다.<br><br>\r\n");
      out.write("\t\t다잉 메시지를 쓰고 죽을 힘을 다해 연필을 부러트릴 이유가 없기 때문이다.<br><br> 그러므로 답은 2번 김희철이다.\r\n");
      out.write("\r\n");
      out.write("\t\t<br><br>\r\n");
      out.write("\t\t<hr color=\"red\" style = \"width: 50%\">\r\n");
      out.write("\t\t<br>\r\n");
      out.write("\t\t<div style = \"font-size: 20pt;\">다섯번째 문제 해석</div>\r\n");
      out.write("\t\t<br>\r\n");
      out.write("\t\t<hr color=\"red\" style = \"width: 50%\">\r\n");
      out.write("\t\t<br>\r\n");
      out.write("\t\t<br>\r\n");
      out.write("\t\t빌라에서 사는 사람들은 서로 모르는 사람이 없을 정도로 다들 알고 지냈다고 했다.<br><br>\r\n");
      out.write("\t\t만약 할머니를 죽인 범인이 일면식이 있는 사람이었다면 몇백몇호에 산다고 말했거나,<br><br> 이름을 말했을 것이며,\r\n");
      out.write("\t\t단순히 '노랑 머리'라고 인상착의만 말하진 않았을 것이다.<br><br>\r\n");
      out.write("\t\t그러나 범인은 안면식이 없는 사람이었기 때문에 할머니는 눈에 띄었던 노랑 머리라는 점을 말한 것이다. <br><br>그러므로 답은 4번 민석영이다.\r\n");
      out.write("</center>\r\n");
      out.write("<button name = \"button\" onClick='window.close()' style = \"margin-left:40%; margin-bottom:5%; margin-top:5%\">돌아가기</button>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
