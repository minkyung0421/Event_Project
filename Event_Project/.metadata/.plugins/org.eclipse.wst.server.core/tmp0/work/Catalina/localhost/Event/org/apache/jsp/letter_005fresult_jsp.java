/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.5
 * Generated at: 2018-09-04 22:21:28 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class letter_005fresult_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<title>EVENT</title>\r\n");
      out.write("</head>\r\n");
      out.write("<style>\r\n");
      out.write("@font-face{\r\n");
      out.write("\tfont-family: 'Calligraphy Personal Use'; src:url('font/Calligraphy Personal Use.ttf');\r\n");
      out.write("}\r\n");
      out.write("@font-face{font-family:'NANUMSQUAREROUNDL'; src:url('font/NANUMSQUAREROUNDL.TTF')}\r\n");
      out.write("@font-face{font-family:'NANUMSQUAREROUNDB'; src:url('font/NANUMSQUAREROUNDB.TTF')}\r\n");
      out.write("body{\r\n");
      out.write("\tmargin:0px;\r\n");
      out.write("\tpadding:0px;\r\n");
      out.write("\tfont-family:'NANUMSQUAREROUNDB';\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("button{\r\n");
      out.write("  background:red;\r\n");
      out.write("  color:#fff;\r\n");
      out.write("  border:none;\r\n");
      out.write("  position:relative;\r\n");
      out.write("  height:60px;\r\n");
      out.write("  font-size:1em;\r\n");
      out.write("  padding:0 2em;\r\n");
      out.write("  cursor:pointer;\r\n");
      out.write("  transition:800ms ease all;\r\n");
      out.write("  outline:none;\r\n");
      out.write("}\r\n");
      out.write("button:hover{\r\n");
      out.write("  background:white;\r\n");
      out.write("  color:#151515;\r\n");
      out.write("}\r\n");
      out.write("button:before,button:after{\r\n");
      out.write("  content:'';\r\n");
      out.write("  position:absolute;\r\n");
      out.write("  top:0;\r\n");
      out.write("  right:0;\r\n");
      out.write("  height:2px;\r\n");
      out.write("  width:0;\r\n");
      out.write("  background: red;\r\n");
      out.write("  transition:400ms ease all;\r\n");
      out.write("}\r\n");
      out.write("button:after{\r\n");
      out.write("  right:inherit;\r\n");
      out.write("  top:inherit;\r\n");
      out.write("  left:0;\r\n");
      out.write("  bottom:0;\r\n");
      out.write("}\r\n");
      out.write("button:hover:before,button:hover:after{\r\n");
      out.write("  width:100%;\r\n");
      out.write("  transition:800ms ease all;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("<body>\r\n");

	request.setCharacterEncoding("UTF-8");

	String l_quiz1 = request.getParameter("l_quiz1");
	String l_quiz2 = request.getParameter("l_quiz2");
	String l_quiz3 = request.getParameter("l_quiz3");
	String l_quiz4 = request.getParameter("l_quiz4");
	String l_quiz5 = request.getParameter("l_quiz5");
	
	int right = 0;
	
	if(l_quiz1.equals("3")){
		right++;
	}
	
	if(l_quiz2.equals("4")){
		right++;
	}
	
	if(l_quiz3.equals("1")){
		right++;
	}
	
	if(l_quiz4.equals("2")){
		right++;
	}
	
	if(l_quiz5.equals("4")){
		right++;
	}
	
	if(right >= 3){
      out.write("\r\n");
      out.write("\t<style>\r\n");
      out.write("\tbody{\r\n");
      out.write("\tmargin:0px;\r\n");
      out.write("\tpadding:0px;\r\n");
      out.write("\tfont-family:'NANUMSQUAREROUNDB';\r\n");
      out.write("\tbackground-image: url(\"https://data.whicdn.com/images/245762463/original.gif\");\r\n");
      out.write("\t}\r\n");
      out.write("\t</style>\r\n");
      out.write("\t\t<center><h1 style = \"margin-top:10%;\">축하합니다! <font color=red size=8pt>탐정 테스트</font>에 통과하셨습니다!</h1>\r\n");
      out.write("\t\t<h3>당신을 탐정으로 임명합니다!</h3>\r\n");
      out.write("\t\t<h3>아래에서 임명장을 다운받으세요!</h3>\r\n");
      out.write("\t\t</center>\r\n");
      out.write("\t\t<a href=\"img/det.jpg\" download=\"탐정 임명장\"><button name = \"button\" style = \"margin-left: 38%; margin-top:10%\" >임명장 다운로드</button></a>\r\n");
      out.write("\t\t<center>\r\n");
      out.write("\t\t<img src=\"img/det.jpg\" width=\"500px\" height=\"350px\"/>\r\n");
      out.write("\t\t</center>\r\n");
      out.write("\t\t<button name = \"button\" onClick='window.close()' style = \"margin-left:30%; margin-right: 5%; margin-top:5%; margin-bottom: 8%;\">돌아가기</button>\r\n");
      out.write("\t\t<a href = \"inter.jsp\"><button name = \"button\">해석보기</button></a>\r\n");
      out.write("\t");
}else{
      out.write("\r\n");
      out.write("\t\t<center><h1 style = \"margin-top:10%;\">탐정 테스트에 통과하지 못했습니다ㅠㅠ</h1>\r\n");
      out.write("\t\t<img src=\"http://pedrojeong.com/wp-content/uploads/2014/05/aaaaaa.jpg\" width=\"500px\" height=\"350px\"/>\r\n");
      out.write("\t\t<h3>다음에 다시 도전하세요!</h3>\r\n");
      out.write("\t\t<button name = \"button\" onClick='window.close()'>돌아가기</button>\r\n");
      out.write("\t");
}
	

      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
